import{u as _,a as P,g as k,b as z,m as w}from"./BCF-RApx.js";import{g as E,l as i,u as I,n as S,R as j,s as H,S as m}from"./GRCun82i.js";const N={...z,legacyFormat:{type:String,default:null},imgAttrs:{type:Object,default:null}},C=E({name:"NuxtPicture",props:N,emits:["load","error"],setup:(t,a)=>{var v,d;const n=_(),o=P(t),g=i(()=>k(t.src)),b=i(()=>["png","webp","gif","svg"].includes(g.value)),l=i(()=>t.legacyFormat?t.legacyFormat:b.value?"png":"jpeg"),s=i(()=>{var f,p;const e=((f=t.format)==null?void 0:f.split(","))||(g.value==="svg"?["svg"]:(p=n.options.format)!=null&&p.length?[...n.options.format]:["webp"]);return e[0]==="svg"?[{src:t.src}]:(e.includes(l.value)&&e.splice(e.indexOf(l.value),1),e.push(l.value),e.map(y=>{const{srcset:A,sizes:F,src:x}=n.getSizes(t.src,{...o.options.value,sizes:t.sizes||n.options.screens,densities:t.densities,modifiers:{...o.modifiers.value,format:y}});return{src:x,type:`image/${y}`,sizes:F,srcset:A}}))}),u=i(()=>s.value.length-1);if(t.preload){const e={rel:"preload",as:"image",imagesrcset:s.value[0].srcset,nonce:t.nonce,...typeof t.preload!="boolean"&&t.preload.fetchPriority?{fetchpriority:t.preload.fetchPriority}:{}};(d=(v=s.value)==null?void 0:v[0])!=null&&d.sizes&&(e.imagesizes=s.value[0].sizes),I({link:[e]})}const c={...t.imgAttrs,"data-nuxt-pic":""};for(const e in a.attrs)e in z&&!(e in c)&&(c[e]=a.attrs[e]);const r=S(),h=j().isHydrating;return H(()=>{r.value&&(r.value.complete&&h&&(r.value.getAttribute("data-error")?a.emit("error",new Event("error")):a.emit("load",new Event("load"))),r.value.onload=e=>{a.emit("load",e)},r.value.onerror=e=>{a.emit("error",e)},w("nuxt-picture"))}),()=>m("picture",null,[...s.value.slice(0,-1).map(e=>m("source",{type:e.type,sizes:e.sizes,srcset:e.srcset})),m("img",{ref:r,...o.attrs.value,...c,src:s.value[u.value].src,sizes:s.value[u.value].sizes,srcset:s.value[u.value].srcset})])}});export{C as _};
