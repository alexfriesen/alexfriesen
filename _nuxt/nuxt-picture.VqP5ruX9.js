import{R as W,S as N,T as $,U as R,q as A,V as U,W as I,X as D,Y as O,l as p,g as L,u as T,n as B,s as k,Z as z}from"./entry.geZe9DNp.js";async function C(e,t){return await G(t).catch(i=>(console.error("Failed to get image meta for "+t,i+""),{width:0,height:0,ratio:0}))}async function G(e){if(typeof Image>"u")throw new TypeError("Image not supported");return new Promise((t,n)=>{const i=new Image;i.onload=()=>{const s={width:i.width,height:i.height,ratio:i.width/i.height};t(s)},i.onerror=s=>n(s),i.src=e})}function V(e=""){return e.split(/[?#]/).shift().split("/").pop().split(".").pop()}function j(e){return t=>t?e[t]||t:e.missingValue}function Y({formatter:e,keyMap:t,joinWith:n="/",valueMap:i}={}){e||(e=(r,o)=>`${r}=${o}`),t&&typeof t!="function"&&(t=j(t));const s=i||{};return Object.keys(s).forEach(r=>{typeof s[r]!="function"&&(s[r]=j(s[r]))}),(r={})=>Object.entries(r).filter(([a,c])=>typeof c<"u").map(([a,c])=>{const u=s[a];return typeof u=="function"&&(c=u(r[a])),a=typeof t=="function"?t(a):a,e(a,c)}).join(n)}function v(e=""){if(typeof e=="number")return e;if(typeof e=="string"&&e.replace("px","").match(/^\d+$/g))return parseInt(e,10)}function Z(e=""){if(e===void 0||!e.length)return[];const t=new Set;for(const n of e.split(" ")){const i=parseInt(n.replace("x",""));i&&t.add(i)}return Array.from(t)}function J(e){if(e.length===0)throw new Error("`densities` must not be empty, configure to `1` to render regular size only (DPR 1.0)")}function X(e){const t={};if(typeof e=="string")for(const n of e.split(/[\s,]+/).filter(i=>i)){const i=n.split(":");i.length!==2?t["1px"]=i[0].trim():t[i[0].trim()]=i[1].trim()}else Object.assign(t,e);return t}function Q(e){const t={options:e},n=(s,r={})=>q(t,s,r),i=(s,r={},o={})=>n(s,{...o,modifiers:A(r,o.modifiers||{})}).url;for(const s in e.presets)i[s]=(r,o,a)=>i(r,o,{...e.presets[s],...a});return i.options=e,i.getImage=n,i.getMeta=(s,r)=>K(t,s,r),i.getSizes=(s,r)=>ie(t,s,r),t.$img=i,i}async function K(e,t,n){const i=q(e,t,{...n});return typeof i.getMeta=="function"?await i.getMeta():await C(e,i.url)}function q(e,t,n){var u,l;if(typeof t!="string"||t==="")throw new TypeError(`input must be a string (received ${typeof t}: ${JSON.stringify(t)})`);if(t.startsWith("data:"))return{url:t};const{provider:i,defaults:s}=ee(e,n.provider||e.options.provider),r=te(e,n.preset);if(t=W(t)?t:N(t),!i.supportsAlias)for(const h in e.options.alias)t.startsWith(h)&&(t=$(e.options.alias[h],t.substr(h.length)));if(i.validateDomains&&W(t)){const h=R(t).host;if(!e.options.domains.find(y=>y===h))return{url:t}}const o=A(n,r,s);o.modifiers={...o.modifiers};const a=o.modifiers.format;(u=o.modifiers)!=null&&u.width&&(o.modifiers.width=v(o.modifiers.width)),(l=o.modifiers)!=null&&l.height&&(o.modifiers.height=v(o.modifiers.height));const c=i.getImage(t,o,e);return c.format=c.format||a||"",c}function ee(e,t){const n=e.options.providers[t];if(!n)throw new Error("Unknown provider: "+t);return n}function te(e,t){if(!t)return{};if(!e.options.presets[t])throw new Error("Unknown preset: "+t);return e.options.presets[t]}function ie(e,t,n){var w,d,S,b,x;const i=v((w=n.modifiers)==null?void 0:w.width),s=v((d=n.modifiers)==null?void 0:d.height),r=X(n.sizes),o=(S=n.densities)!=null&&S.trim()?Z(n.densities.trim()):e.options.densities;J(o);const a=i&&s?s/i:0,c=[],u=[];if(Object.keys(r).length>=1){for(const f in r){const g=M(f,String(r[f]),s,a,e);if(g!==void 0){c.push({size:g.size,screenMaxWidth:g.screenMaxWidth,media:`(max-width: ${g.screenMaxWidth}px)`});for(const m of o)u.push({width:g._cWidth*m,src:P(e,t,n,g,m)})}}ne(c)}else for(const f of o){const g=Object.keys(r)[0];let m=M(g,String(r[g]),s,a,e);m===void 0&&(m={size:"",screenMaxWidth:0,_cWidth:(b=n.modifiers)==null?void 0:b.width,_cHeight:(x=n.modifiers)==null?void 0:x.height}),u.push({width:f,src:P(e,t,n,m,f)})}se(u);const l=u[u.length-1],h=c.length?c.map(f=>`${f.media?f.media+" ":""}${f.size}`).join(", "):void 0,y=h?"w":"x",_=u.map(f=>`${f.src} ${f.width}${y}`).join(", ");return{sizes:h,srcset:_,src:l==null?void 0:l.src}}function M(e,t,n,i,s){const r=s.options.screens&&s.options.screens[e]||parseInt(e),o=t.endsWith("vw");if(!o&&/^\d+$/.test(t)&&(t=t+"px"),!o&&!t.endsWith("px"))return;let a=parseInt(t);if(!r||!a)return;o&&(a=Math.round(a/100*r));const c=i?Math.round(a*i):n;return{size:t,screenMaxWidth:r,_cWidth:a,_cHeight:c}}function P(e,t,n,i,s){return e.$img(t,{...n.modifiers,width:i._cWidth?i._cWidth*s:void 0,height:i._cHeight?i._cHeight*s:void 0},n)}function ne(e){var n;e.sort((i,s)=>i.screenMaxWidth-s.screenMaxWidth);let t=null;for(let i=e.length-1;i>=0;i--){const s=e[i];s.media===t&&e.splice(i,1),t=s.media}for(let i=0;i<e.length;i++)e[i].media=((n=e[i+1])==null?void 0:n.media)||""}function se(e){e.sort((n,i)=>n.width-i.width);let t=null;for(let n=e.length-1;n>=0;n--){const i=e[n];i.width===t&&e.splice(n,1),t=i.width}}const re=Y({keyMap:{format:"f",fit:"fit",width:"w",height:"h",resize:"s",quality:"q",background:"b"},joinWith:"&",formatter:(e,t)=>I(e)+"_"+I(t)}),oe=(e,{modifiers:t={},baseURL:n}={},i)=>{t.width&&t.height&&(t.resize=`${t.width}x${t.height}`,delete t.width,delete t.height);const s=re(t)||"_";return n||(n=$(i.options.nuxt.baseURL,"/_ipx")),{url:$(n,s,U(e))}},ae=!0,de=!0,ce=Object.freeze(Object.defineProperty({__proto__:null,getImage:oe,supportsAlias:de,validateDomains:ae},Symbol.toStringTag,{value:"Module"})),E={screens:{xs:320,sm:640,md:768,lg:1024,xl:1280,xxl:1536,"2xl":1536},presets:{},provider:"ipxStatic",domains:[],alias:{},densities:[1,2],format:["webp"]};E.providers={ipxStatic:{provider:ce,defaults:{}}};const F=()=>{const e=D(),t=O();return t.$img||t._img||(t._img=Q({...E,nuxt:{baseURL:e.app.baseURL}}))},H={src:{type:String,required:!0},format:{type:String,default:void 0},quality:{type:[Number,String],default:void 0},background:{type:String,default:void 0},fit:{type:String,default:void 0},modifiers:{type:Object,default:void 0},preset:{type:String,default:void 0},provider:{type:String,default:void 0},sizes:{type:[Object,String],default:void 0},densities:{type:String,default:void 0},preload:{type:Boolean,default:void 0},width:{type:[String,Number],default:void 0},height:{type:[String,Number],default:void 0},alt:{type:String,default:void 0},referrerpolicy:{type:String,default:void 0},usemap:{type:String,default:void 0},longdesc:{type:String,default:void 0},ismap:{type:Boolean,default:void 0},loading:{type:String,default:void 0,validator:e=>["lazy","eager"].includes(e)},crossorigin:{type:[Boolean,String],default:void 0,validator:e=>["anonymous","use-credentials","",!0,!1].includes(e)},decoding:{type:String,default:void 0,validator:e=>["async","auto","sync"].includes(e)},nonce:{type:[String],default:void 0}},ue=e=>{const t=p(()=>({provider:e.provider,preset:e.preset})),n=p(()=>({width:v(e.width),height:v(e.height),alt:e.alt,referrerpolicy:e.referrerpolicy,usemap:e.usemap,longdesc:e.longdesc,ismap:e.ismap,crossorigin:e.crossorigin===!0?"anonymous":e.crossorigin||void 0,loading:e.loading,decoding:e.decoding,nonce:e.nonce})),i=F(),s=p(()=>({...e.modifiers,width:v(e.width),height:v(e.height),format:e.format,quality:e.quality||i.options.quality,background:e.background,fit:e.fit}));return{options:t,attrs:n,modifiers:s}},fe={...H,legacyFormat:{type:String,default:null},imgAttrs:{type:Object,default:null}},ge=L({name:"NuxtPicture",props:fe,emits:["load"],setup:(e,t)=>{var _,w;const n=F(),i=ue(e),s=p(()=>V(e.src)),r=p(()=>["png","webp","gif","svg"].includes(s.value)),o=p(()=>e.legacyFormat?e.legacyFormat:r.value?"png":"jpeg"),a=p(()=>{var S,b;const d=((S=e.format)==null?void 0:S.split(","))||(s.value==="svg"?["svg"]:(b=n.options.format)!=null&&b.length?[...n.options.format]:["webp"]);return d[0]==="svg"?[{src:e.src}]:(d.includes(o.value)&&d.splice(d.indexOf(o.value),1),d.push(o.value),d.map(x=>{const{srcset:f,sizes:g,src:m}=n.getSizes(e.src,{...i.options.value,sizes:e.sizes||n.options.screens,densities:e.densities,modifiers:{...i.modifiers.value,format:x}});return{src:m,type:`image/${x}`,sizes:g,srcset:f}}))}),c=p(()=>a.value.length-1);if(e.preload){const d={rel:"preload",as:"image",imagesrcset:a.value[0].srcset,nonce:e.nonce};(w=(_=a.value)==null?void 0:_[0])!=null&&w.sizes&&(d.imagesizes=a.value[0].sizes),T({link:[d]})}const u={...e.imgAttrs,"data-nuxt-pic":""};for(const d in t.attrs)d in H&&!(d in u)&&(u[d]=t.attrs[d]);const l=B(),y=O().isHydrating;return k(()=>{l.value&&(l.value.complete&&y&&!l.value.getAttribute("data-error")&&t.emit("load",new Event("load")),l.value.onload=d=>{t.emit("load",d)})}),()=>z("picture",null,[...a.value.slice(0,-1).map(d=>z("source",{type:d.type,sizes:d.sizes,srcset:d.srcset})),z("img",{ref:l,...i.attrs.value,...u,src:a.value[c.value].src,sizes:a.value[c.value].sizes,srcset:a.value[c.value].srcset})])}});export{ge as _};
